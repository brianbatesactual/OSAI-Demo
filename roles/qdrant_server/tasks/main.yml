- name: Install Docker dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: present
    update_cache: yes

- name: Add Docker GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker APT repository
  apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
    state: present

- name: Install Docker and Docker Compose
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose
    state: present
    update_cache: yes

- name: Ensure python3-pip is installed
  apt:
    name: python3-pip
    state: present

- name: Install latest Python Docker SDK (docker-py)
  pip:
    name: "docker>=6.1.3"
    executable: pip3
    state: latest

- name: Ensure Docker service is running
  service:
    name: docker
    state: started
    enabled: yes

- name: Create directory for Docker Compose stack
  file:
    path: "{{ qdrant_gateway_compose_path }}"
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Copy Docker Compose template
  template:
    src: docker-compose.yml.j2
    dest: "{{ qdrant_gateway_compose_path }}/docker-compose.yml"
    owner: root
    group: root
    mode: "0644"

- name: Copy Vatrix Gateway source code for build context
  copy:
    src: "{{ playbook_dir }}/roles/qdrant_server/files/vatrix_gateway/"
    dest: "{{ qdrant_gateway_compose_path }}/vatrix_gateway/"
    remote_src: no
  notify: Rebuild Docker Compose stack

- name: Ensure /opt/vatrix_stack/qdrant directory exists
  file:
    path: /opt/vatrix_stack/qdrant
    state: directory
    mode: '0755'

- name: Copy custom Dockerfile for Qdrant
  copy:
    src: qdrant/Dockerfile.qdrant
    dest: /opt/vatrix_stack/qdrant/Dockerfile.qdrant
    mode: '0644'

- name: Start Docker Compose stack (v2 CLI mode)
  community.docker.docker_compose_v2:
    project_src: "{{ qdrant_gateway_compose_path }}"
    state: present
    build: always
    remove_orphans: true
    recreate: always
